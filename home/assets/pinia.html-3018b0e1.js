import{_ as e,r as o,o as c,c as i,b as n,d as s,e as t,a as p}from"./app-4722fb10.js";const l="/home/assets/image-20230802102842491-87b238c0.png",u="/home/assets/image-20230802112843349-aa6663eb.png",r="/home/assets/image-20230802112927726-76b0ad07.png",k={},d=p(`<h1 id="pinia" tabindex="-1"><a class="header-anchor" href="#pinia" aria-hidden="true">#</a> pinia</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。 如果您熟悉 Composition API，您可能会认为您已经可以通过一个简单的 <code>export const state = reactive({})</code>. 这对于单页应用程序来说是正确的，但如果它是服务器端呈现的，<strong>会使您的应用程序暴露于安全漏洞</strong>。 但即使在小型单页应用程序中，您也可以从使用 Pinia 中获得很多好处：</p><ul><li>dev-tools 支持 <ul><li>跟踪动作、突变的时间线</li><li>Store 出现在使用它们的组件中</li><li>time travel 和 更容易的调试</li></ul></li><li>热模块更换 <ul><li>在不重新加载页面的情况下修改您的 Store</li><li>在开发时保持任何现有状态</li></ul></li><li>插件：使用插件扩展 Pinia 功能</li><li>为 JS 用户提供适当的 TypeScript 支持或 <strong>autocompletion</strong></li><li>服务器端渲染支持</li></ul><p>与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。</p><h2 id="pinia项目实战-基于腾讯im的客服程序" tabindex="-1"><a class="header-anchor" href="#pinia项目实战-基于腾讯im的客服程序" aria-hidden="true">#</a> pinia项目实战-基于腾讯IM的客服程序</h2><h3 id="了解自定义插件" tabindex="-1"><a class="header-anchor" href="#了解自定义插件" aria-hidden="true">#</a> 了解自定义插件</h3><h4 id="介绍-1" tabindex="-1"><a class="header-anchor" href="#介绍-1" aria-hidden="true">#</a> 介绍</h4><p>Pinia 插件是一个函数，可以选择返回要添加到 store 的属性。 它需要一个可选参数，一个 <em>context</em>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export function myPiniaPlugin(context) {
  context.pinia // 使用 \`createPinia()\` 创建的 pinia
  context.app // 使用 \`createApp()\` 创建的当前应用程序（仅限 Vue 3）
  context.store // 插件正在扩充的 store
  context.options // 定义存储的选项对象传递给\`defineStore()\`
  // ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后使用 <code>pinia.use()</code> 将此函数传递给 <code>pinia</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pinia.use(myPiniaPlugin)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>插件仅适用于**在将<code>pinia</code>传递给应用程序后创建的 store **，否则将不会被应用。</p><h4 id="自定义状态持久化插件" tabindex="-1"><a class="header-anchor" href="#自定义状态持久化插件" aria-hidden="true">#</a> 自定义状态持久化插件</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> PiniaPluginContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>context<span class="token operator">:</span> PiniaPluginContext<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> currState <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>store<span class="token punctuation">.</span>$id<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span>
  context<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span>currState<span class="token punctuation">)</span>

  context<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">$subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_state<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>_state<span class="token punctuation">.</span>storeId<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    detached<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 该订阅在组件卸载后保留</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="项目实现" tabindex="-1"><a class="header-anchor" href="#项目实现" aria-hidden="true">#</a> 项目实现</h3><p>腾讯IM的功能以pinia插件的形式实现，将IM的核心功能作为pinia插件，在pinia初始化时，自动初始化IM api</p>`,17),v={href:"https://cloud.tencent.com/document/product/269/75285",target:"_blank",rel:"noopener noreferrer"},m={href:"https://cloud.tencent.com/act/free/personal?from=20417",target:"_blank",rel:"noopener noreferrer"},b=p(`<h4 id="为pinia添加im核心功能属性和创建选项" tabindex="-1"><a class="header-anchor" href="#为pinia添加im核心功能属性和创建选项" aria-hidden="true">#</a> 为pinia添加IM核心功能属性和创建选项</h4><p>需要在src目录下，新建<code>type.d.ts</code>类型声明文件</p><p>创建选项，是需要在创建pinia，初始化IM时，传入IM的服务<code>SDKAppID</code></p><p>核心功能属性时将整个TIM对象挂载到pinia上，方便调用其api</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// type.ts</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ITimCoreProps</span> <span class="token punctuation">{</span>
  SDKAppID<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ITimCoreProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./stores/plugins/TIM-plugin/type&#39;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token class-name">TIMCore</span> <span class="token keyword">from</span> <span class="token string">&#39;./stores/plugins/TIM-plugin/TIM_core&#39;</span>

<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;pinia&#39;</span> <span class="token punctuation">{</span>
  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">DefineStoreOptionsBase<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> Store<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">/**
     * TIM初始化的参数
     */</span>
    TIMOptions<span class="token operator">?</span><span class="token operator">:</span> ITimCoreProps
  <span class="token punctuation">}</span>
  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PiniaCustomProperties</span> <span class="token punctuation">{</span>
    <span class="token comment">/**
     * TIM核心功能对象
     */</span>
    timCore<span class="token operator">:</span> TIMCore
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建timcore核心类" tabindex="-1"><a class="header-anchor" href="#创建timcore核心类" aria-hidden="true">#</a> 创建TIMCore核心类</h4><p><img src="`+l+`" alt="image-20230802102842491"></p><p>可以创建一个类，在需要使用的时候，new一个类实例即可</p><p>在<code>store</code>文件夹中，创建<code>TIM-plugin</code>文件夹，创建<code>TIM_core.ts</code>文件，用来定义核心功能类</p><p>这里直接复制官网的代码即可，只不过将<code>TencentCloudChat.create(options)</code>生成的对象作为类属性即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 如果您已集成 v2.x 的 SDK，想升级到 V3 并且想尽可能地少改动项目代码，可以继续沿用 TIM</span>
<span class="token comment">// import TIM from &#39;@tencentcloud/chat&#39;;</span>
<span class="token keyword">import</span> TIMUploadPlugin <span class="token keyword">from</span> <span class="token string">&#39;tim-upload-plugin&#39;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ITimCoreProps<span class="token punctuation">,</span> TIMLoginParams <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./type&#39;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ChatSDK<span class="token punctuation">,</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tencentcloud/chat&#39;</span>
<span class="token keyword">import</span> TencentCloudChat <span class="token keyword">from</span> <span class="token string">&#39;@tencentcloud/chat&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">TIMCore</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> chat<span class="token operator">:</span> ChatSDK <span class="token operator">|</span> <span class="token keyword">undefined</span>
  <span class="token keyword">public</span> userID<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">public</span> userSig<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token operator">:</span> ITimCoreProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initTimSdk</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>SDKAppID<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindTIMEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">initTimSdk</span><span class="token punctuation">(</span>SDKAppID<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      SDKAppID<span class="token punctuation">,</span> <span class="token comment">// 接入时需要将0替换为您的即时通信 IM 应用的 SDKAppID</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 创建 SDK 实例，\`TIM.create()\`方法对于同一个 \`SDKAppID\` 只会返回同一份实例</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chat <span class="token operator">=</span> TencentCloudChat<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token comment">// SDK 实例通常用 chat 表示</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">setLogLevel</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 普通级别，日志量较多，接入时建议使用</span>
    <span class="token comment">// chat.setLogLevel(1); // release 级别，SDK 输出关键信息，生产环境时建议使用</span>
    <span class="token comment">// 注册腾讯云即时通信 IM 上传插件</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">registerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;tim-upload-plugin&#39;</span><span class="token operator">:</span> TIMUploadPlugin <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 注册腾讯云即时通信 IM 本地审核插件</span>
    <span class="token comment">// chat.registerPlugin({</span>
    <span class="token comment">//   &#39;tim-profanity-filter-plugin&#39;: TIMProfanityFilterPlugin,</span>
    <span class="token comment">// })</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">persisted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建tim插件" tabindex="-1"><a class="header-anchor" href="#创建tim插件" aria-hidden="true">#</a> 创建TIM插件</h4><p>即目录的<code>/TIM_plugin/index.ts</code>文件</p><p>在这个插件中，需要根据自定义的options，去创建一个TIMCore对象，挂载到store即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> PiniaPluginContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> TIMCore <span class="token keyword">from</span> <span class="token string">&#39;./TIM_core&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>context<span class="token operator">:</span> PiniaPluginContext<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>options<span class="token punctuation">.</span>TIMOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> timCore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMCore</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>options<span class="token punctuation">.</span>TIMOptions<span class="token punctuation">)</span>
    context<span class="token punctuation">.</span>store<span class="token punctuation">.</span>timCore <span class="token operator">=</span> timCore
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建timstore" tabindex="-1"><a class="header-anchor" href="#创建timstore" aria-hidden="true">#</a> 创建TIMStore</h4><p>即<code>store/chat.ts</code></p><p>在这个store中，需要声明TIMOptions，赋值SDKAppID，这样在插件中才会有值</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Message<span class="token punctuation">,</span> Conversation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tencentcloud/chat&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useTIMStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;chat&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  TIMOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    SDKAppID<span class="token operator">:</span> <span class="token number">1400823884</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成以上工作，就可以看到控制台会打印很多chat的日志，就说明IM初始化好了</p><h4 id="登录登出" tabindex="-1"><a class="header-anchor" href="#登录登出" aria-hidden="true">#</a> 登录登出</h4><p>在TIMCore中完善登录逻辑</p><p>在这里需要注意持久化登录，每次刷新页面，pinia都会重新初始化，所以需要自动刷新登陆状态</p><p>在登出的时候，需要取消订阅消息</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// type.ts</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">TIMLoginParams</span> <span class="token punctuation">{</span>
  userID<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  userSig<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">/**
 * 持久登录
 */</span>
<span class="token keyword">private</span> <span class="token function-variable function">persisted</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;TIMCoreLogin&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;{}&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>userID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">TIMLogin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * 登录TIM
 * @param options 用户信息
 * @returns
 */</span>
<span class="token function-variable function">TIMLogin</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> TIMLoginParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;TIMCoreLogin&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>userID <span class="token operator">=</span> options<span class="token punctuation">.</span>userID
  <span class="token keyword">this</span><span class="token punctuation">.</span>userSig <span class="token operator">=</span> options<span class="token punctuation">.</span>userSig
<span class="token punctuation">}</span>

<span class="token comment">/**
 * 登出TIM
 * @returns
 */</span>
<span class="token function-variable function">TIMLogout</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>TencentCloudChat<span class="token punctuation">.</span><span class="token constant">EVENT</span><span class="token punctuation">.</span><span class="token constant">MESSAGE_RECEIVED</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>TencentCloudChat<span class="token punctuation">.</span><span class="token constant">EVENT</span><span class="token punctuation">.</span><span class="token constant">SDK_READY</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;TIMCoreLogin&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="订阅ready事件" tabindex="-1"><a class="header-anchor" href="#订阅ready事件" aria-hidden="true">#</a> 订阅ready事件</h4><p>在TIMCore中完善逻辑</p><p>在创建TIMCore对象时，便需要订阅好SDKReady事件，在SDK ready后，订阅接收消息事件和会话列表更新事件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  <span class="token comment">/**
   * 订阅sdk ready事件
   * @returns
   */</span>
  <span class="token keyword">private</span> <span class="token function-variable function">bindTIMEvent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>TencentCloudChat<span class="token punctuation">.</span><span class="token constant">EVENT</span><span class="token punctuation">.</span><span class="token constant">SDK_READY</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSDKReady<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">/**
   * SDKready回调，并订阅接收消息事件
   * @returns
   */</span>
  <span class="token keyword">private</span> <span class="token function-variable function">handleSDKReady</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;SDK ready..........&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>
      TencentCloudChat<span class="token punctuation">.</span><span class="token constant">EVENT</span><span class="token punctuation">.</span><span class="token constant">MESSAGE_RECEIVED</span><span class="token punctuation">,</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>onMessageReceived<span class="token punctuation">,</span>
      <span class="token keyword">this</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>TencentCloudChat<span class="token punctuation">.</span><span class="token constant">EVENT</span><span class="token punctuation">.</span><span class="token constant">CONVERSATION_LIST_UPDATED</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onReady<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * 准备就绪回调，可覆盖，交给用户自定义逻辑
   */</span>
  <span class="token keyword">public</span> <span class="token function-variable function">onReady</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="发送消息" tabindex="-1"><a class="header-anchor" href="#发送消息" aria-hidden="true">#</a> 发送消息</h4><p>在TIMCore中完善逻辑</p><p>定义一个发送文本消息函数，暴露出去即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  <span class="token comment">/**
   * 发送消息
   * @param userId 用户名
   * @param text 消息
   * @returns 无
   */</span>
  <span class="token keyword">public</span> <span class="token function-variable function">sendTextMessage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">)</span> <span class="token keyword">return</span>
    <span class="token comment">// 1. 创建消息实例，接口返回的实例可以上屏</span>
    <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">createTextMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      to<span class="token operator">:</span> userId<span class="token punctuation">,</span>
      conversationType<span class="token operator">:</span> TencentCloudChat<span class="token punctuation">.</span><span class="token constant">TYPES</span><span class="token punctuation">.</span><span class="token constant">CONV_C2C</span><span class="token punctuation">,</span>
      <span class="token comment">// 消息优先级，用于群聊。如果某个群的消息超过了频率限制，后台会优先下发高优先级的消息</span>
      <span class="token comment">// priority: TencentCloudChat.TYPES.MSG_PRIORITY_NORMAL,</span>
      payload<span class="token operator">:</span> <span class="token punctuation">{</span>
        text<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 如果您发消息需要已读回执，需购买旗舰版套餐，并且创建消息时将 needReadReceipt 设置为 true</span>
      <span class="token comment">// needReadReceipt: true,</span>
      <span class="token comment">// 消息自定义数据（云端保存，会发送到对端，程序卸载重装后还能拉取到）</span>
      <span class="token comment">// cloudCustomData: &#39;your cloud custom data&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 2. 发送消息</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;发送成功&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span>
    <span class="token keyword">return</span> message
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="接收消息" tabindex="-1"><a class="header-anchor" href="#接收消息" aria-hidden="true">#</a> 接收消息</h4><p>在TIMCore中完善逻辑</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  <span class="token comment">/**
   * 接收消息回调
   *
   * @param event 事件对象
   */</span>
  <span class="token keyword">private</span> <span class="token function-variable function">onMessageReceived</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// event.data - 存储 Message 对象的数组 - [Message]</span>
    <span class="token keyword">const</span> messageList <span class="token operator">=</span> event<span class="token punctuation">.</span>data
    messageList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>type <span class="token operator">===</span> TencentCloudChat<span class="token punctuation">.</span><span class="token constant">TYPES</span><span class="token punctuation">.</span><span class="token constant">MSG_TEXT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 文本消息 - https://web.sdk.qcloud.com/im/doc/v3/zh-cn/Message.html#.TextPayload</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;TIM---- &quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token comment">// 设置消息已读</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>chat<span class="token operator">?.</span><span class="token function">setMessageRead</span><span class="token punctuation">(</span><span class="token punctuation">{</span>conversationID<span class="token operator">:</span> message<span class="token punctuation">.</span>conversationID<span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">messageReceived</span><span class="token punctuation">(</span>messageList<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * 对外暴露的接收消息回调，可重写,交给用户自定义
   * @param event 
   */</span>
  <span class="token keyword">public</span> <span class="token function-variable function">messageReceived</span> <span class="token operator">=</span> <span class="token punctuation">(</span>messageList<span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里，就已经完成了TIMCore的核心功能，登录登出，发送和接收消息的api</p><h4 id="获取会话列表" tabindex="-1"><a class="header-anchor" href="#获取会话列表" aria-hidden="true">#</a> 获取会话列表</h4><p>在<code>chat.ts</code>中完善逻辑</p><p>这里获取会话列表后，需要将其存储到store中，因此要定义在状态中</p><p>保存下来各个会话的<code>conversationID</code>即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  state<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    conversationList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      conversationList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  actions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">/**
     * 获取会话列表
     */</span>
    <span class="token keyword">async</span> <span class="token function">getSessionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>timCore<span class="token punctuation">.</span>chat<span class="token operator">?.</span><span class="token function">getConversationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>conversationList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>item<span class="token operator">:</span> Conversation<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>conversationList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>conversationID<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>conversationList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>conversationID<span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;get conversation&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>conversationList<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="维护消息列表" tabindex="-1"><a class="header-anchor" href="#维护消息列表" aria-hidden="true">#</a> 维护消息列表</h4><p>在<code>chat.ts</code>中完善逻辑</p><p>消息列表获取后，也用store保存一下，减少请求次数</p><p>用一个对象存储，key是会话id，值是消息列表</p><p>提供添加消息，获取消息action，getMessageList作为过渡，如果存在则拿现有的，否则请求腾讯IM</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  state<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    conversationList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    messageList<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      conversationList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      messageList<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  actions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">addMessage</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> message<span class="token operator">:</span> Message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token keyword">async</span> <span class="token function">getHistoryMessageList</span><span class="token punctuation">(</span>conversationId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>timCore<span class="token punctuation">.</span>chat<span class="token operator">?.</span><span class="token function">getMessageList</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        conversationID<span class="token operator">:</span> conversationId<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>conversationId<span class="token punctuation">]</span> <span class="token operator">=</span> list<span class="token punctuation">.</span>data<span class="token punctuation">.</span>messageList
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>conversationId<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token keyword">async</span> <span class="token function">getMessageList</span><span class="token punctuation">(</span>conversationId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>conversationId<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111111111111111</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageList<span class="token punctuation">[</span>conversationId<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHistoryMessageList</span><span class="token punctuation">(</span>conversationId<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function">resetStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>conversationList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>messageList <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="页面登录登出逻辑" tabindex="-1"><a class="header-anchor" href="#页面登录登出逻辑" aria-hidden="true">#</a> 页面登录登出逻辑</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// utils.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> genTestUserSig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../debug/index&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getUserSig <span class="token operator">=</span> <span class="token punctuation">(</span>
  userId<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  SDKAppID<span class="token operator">:</span> <span class="token builtin">number</span>
  userSig<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">genTestUserSig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    SDKAppID<span class="token operator">:</span> <span class="token number">1400823884</span><span class="token punctuation">,</span>
    userID<span class="token operator">:</span> userId<span class="token punctuation">,</span>
    <span class="token comment">// 在腾讯网站复制即可</span>
    secretKey<span class="token operator">:</span>
      <span class="token string">&#39;3f6b4e829fdc360d58c8a6fe92ad0706f71ee256d0ee9203dccca6842a1d2b69&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 登录</span>
<span class="token keyword">interface</span> <span class="token class-name">FormState</span> <span class="token punctuation">{</span>
  username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> formState <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reactive</span><span class="token generic class-name"><span class="token operator">&lt;</span>FormState<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  username<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  password<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useTIMStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">onFinish</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>values<span class="token operator">:</span> FormState<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 调用timCore对象的登陆方法即可</span>
  <span class="token keyword">await</span> store<span class="token punctuation">.</span>timCore<span class="token punctuation">.</span><span class="token function">TIMLogin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    userID<span class="token operator">:</span> values<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
    userSig<span class="token operator">:</span> <span class="token function">getUserSig</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">.</span>userSig
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span>username <span class="token operator">==</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      role<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>
      username<span class="token operator">:</span> values<span class="token punctuation">.</span>username
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      role<span class="token operator">:</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>
      username<span class="token operator">:</span> values<span class="token punctuation">.</span>username
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 登出</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useTIMStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">logout</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// 调用timCore登出方法</span>
  <span class="token keyword">await</span> store<span class="token punctuation">.</span>timCore<span class="token punctuation">.</span><span class="token function">TIMLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// 要重置store</span>
  store<span class="token punctuation">.</span><span class="token function">resetStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="页面聊天逻辑" tabindex="-1"><a class="header-anchor" href="#页面聊天逻辑" aria-hidden="true">#</a> 页面聊天逻辑</h4><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>service-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-menu</span> <span class="token attr-name"><span class="token namespace">v-model:</span>selectedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedKeys<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 256px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageRef<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in messageList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.text + Math.random().toString()<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
          textAlign: item.align == &#39;left&#39; ? &#39;left&#39; : &#39;right&#39;,
        }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
            display: &#39;inline-block&#39;,
            marginLeft: item.align == &#39;left&#39; ? &#39;0&#39; : &#39;50px&#39;,
            marginRight: item.align == &#39;left&#39; ? &#39;50px&#39; : &#39;0&#39;,
          }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left-arrow<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.align == &#39;left&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item.text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right-arrow<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.align == &#39;right&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-textarea</span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inputValue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@pressEnter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sendMessage<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>回车发送消息<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:auto-size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ minRows: 2, maxRows: 4 }<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> h<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  MailOutlined
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/icons-vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useTIMStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/chat&#39;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tencentcloud/chat&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> selectedKeys <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">messageItem</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> string
  <span class="token literal-property property">align</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
<span class="token keyword">const</span> messageList <span class="token operator">=</span> ref<span class="token operator">&lt;</span>messageItem<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// 每次切换会话，都需要重新获取消息</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> key <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> string <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  selectedKeys<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> roleItem <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;{}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> selectedKeys<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> inputValue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useTIMStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 会话列表计算属性，根据store保存的会话列表计算出来</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里需要注意，如果是普通用户，那么默认一个admin客户会话</span>
    <span class="token keyword">const</span> list <span class="token operator">=</span> store<span class="token punctuation">.</span>conversationList<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>
      <span class="token operator">?</span> store<span class="token punctuation">.</span>conversationList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> item<span class="token punctuation">,</span>
          <span class="token function-variable function">icon</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>MailOutlined<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token literal-property property">label</span><span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token literal-property property">title</span><span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> roleItem<span class="token punctuation">.</span>role <span class="token operator">==</span> <span class="token string">&#39;normal&#39;</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token comment">// 记得要加C2C</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;C2Cadmin&#39;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">icon</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>MailOutlined<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// 初始化会话选择，默认选择第一个会话</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedKeys<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      selectedKeys<span class="token punctuation">.</span>value <span class="token operator">=</span> list<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">[</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?.</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> list
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">// 发送消息，调用timCore的方法，然后更新store的消息列表</span>
<span class="token keyword">const</span> <span class="token function-variable function">sendMessage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span>timCore<span class="token punctuation">.</span><span class="token function">sendTextMessage</span><span class="token punctuation">(</span>userId<span class="token punctuation">.</span>value<span class="token punctuation">,</span> inputValue<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  inputValue<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  message <span class="token operator">&amp;&amp;</span> store<span class="token punctuation">.</span><span class="token function">addMessage</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span>
  <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 自定义sdkready逻辑，sdk ready后，获取会话列表</span>
store<span class="token punctuation">.</span>timCore<span class="token punctuation">.</span><span class="token function-variable function">onReady</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getSessionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 获取store的消息，然后保存到页面的数据中，刷新页面</span>
<span class="token keyword">const</span> <span class="token function-variable function">getMessage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  messageList<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getMessageList</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  messageList<span class="token punctuation">.</span>value <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> item<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>text<span class="token punctuation">,</span>
      <span class="token literal-property property">align</span><span class="token operator">:</span> item<span class="token punctuation">.</span>flow <span class="token operator">==</span> <span class="token string">&#39;out&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;right&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;left&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 自定义接受消息逻辑，将接收到的消息保存到store</span>
store<span class="token punctuation">.</span>timCore<span class="token punctuation">.</span><span class="token function-variable function">messageReceived</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">messageList</span><span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  messageList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    item <span class="token operator">&amp;&amp;</span> store<span class="token punctuation">.</span><span class="token function">addMessage</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>conversationID<span class="token punctuation">,</span> item<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 每次消息列表更新，都将滚动条移到最后，保证在最后一条消息</span>
<span class="token keyword">const</span> messageRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">setScroll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">dom</span><span class="token operator">:</span> any <span class="token operator">=</span> messageRef<span class="token punctuation">.</span>value <span class="token operator">&amp;&amp;</span> messageRef<span class="token punctuation">.</span>value
  <span class="token keyword">if</span> <span class="token punctuation">(</span>dom<span class="token punctuation">)</span>
    dom<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> dom<span class="token punctuation">.</span>scrollHeight
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.service-box</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>

  <span class="token selector">.right</span> <span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>

    <span class="token selector">.message</span> <span class="token punctuation">{</span>
      <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
      <span class="token property">padding</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span>
      <span class="token property">overflow-y</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>

      <span class="token selector">&amp;::-webkit-scrollbar</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">// 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置。
      &amp;::-webkit-scrollbar-button</span> <span class="token punctuation">{</span>
        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">// 滚动条的轨道（里面装有Thumb）
      &amp;::-webkit-scrollbar-track</span> <span class="token punctuation">{</span>
        <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">// 滚动条的轨道（里面装有Thumb）
      &amp;::-webkit-scrollbar-track-piece</span> <span class="token punctuation">{</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">// 滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条）
      &amp;::-webkit-scrollbar-thumb</span> <span class="token punctuation">{</span>
        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>144<span class="token punctuation">,</span> 147<span class="token punctuation">,</span> 153<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
        <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">// 边角，即两个滚动条的交汇处
      &amp;::-webkit-scrollbar-corner</span> <span class="token punctuation">{</span>
        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token selector">// 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件
      &amp;::-webkit-resizer</span> <span class="token punctuation">{</span>
        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>


      <span class="token selector">.message-item</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>

        <span class="token selector">.item-content</span> <span class="token punctuation">{</span>
          <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
          <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>

          <span class="token selector">.left-arrow</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
            <span class="token property">border-top</span><span class="token punctuation">:</span> 5px solid transparent<span class="token punctuation">;</span>
            <span class="token property">border-right</span><span class="token punctuation">:</span> 5px solid #41a2fc<span class="token punctuation">;</span>
            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 5px solid transparent<span class="token punctuation">;</span>
            <span class="token property">border-left</span><span class="token punctuation">:</span> 5px solid transparent<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token selector">.content</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
            <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> #41a2fc<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
            <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> 8px 10px<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token selector">.right-arrow</span> <span class="token punctuation">{</span>
            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
            <span class="token property">border-top</span><span class="token punctuation">:</span> 5px solid transparent<span class="token punctuation">;</span>
            <span class="token property">border-right</span><span class="token punctuation">:</span> 5px solid transparent<span class="token punctuation">;</span>
            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 5px solid transparent<span class="token punctuation">;</span>
            <span class="token property">border-left</span><span class="token punctuation">:</span> 5px solid #41a2fc<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="store-index-ts" tabindex="-1"><a class="header-anchor" href="#store-index-ts" aria-hidden="true">#</a> /store/index.ts</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> persistedState <span class="token keyword">from</span> <span class="token string">&#39;./plugins/persisted-state&#39;</span>
<span class="token keyword">import</span> TIMPlugin <span class="token keyword">from</span> <span class="token string">&#39;./plugins/TIM-plugin&#39;</span>

<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 使用插件</span>
pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>persistedState<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>TIMPlugin<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> pinia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="最后结果" tabindex="-1"><a class="header-anchor" href="#最后结果" aria-hidden="true">#</a> 最后结果</h4><p><img src="`+u+'" alt="image-20230802112843349"></p><p><img src="'+r+'" alt="image-20230802112927726"></p>',60);function g(y,h){const a=o("ExternalLinkIcon");return c(),i("div",null,[d,n("p",null,[n("a",v,[s("腾讯IM文档地址"),t(a)]),s(),n("a",m,[s("免费试用腾讯IM"),t(a)])]),b])}const w=e(k,[["render",g],["__file","pinia.html.vue"]]);export{w as default};
