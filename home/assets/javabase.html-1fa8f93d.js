const l=JSON.parse('{"key":"v-810490d0","path":"/master/bagu/javabase.html","title":"Java基础","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"Java SE vs Java EE","slug":"java-se-vs-java-ee","link":"#java-se-vs-java-ee","children":[]},{"level":3,"title":"JDK vs JRE vs JVM","slug":"jdk-vs-jre-vs-jvm","link":"#jdk-vs-jre-vs-jvm","children":[]},{"level":3,"title":"***JMM了解吗","slug":"jmm了解吗","link":"#jmm了解吗","children":[]},{"level":3,"title":"***JMM特性？","slug":"jmm特性","link":"#jmm特性","children":[]},{"level":3,"title":"字节码","slug":"字节码","link":"#字节码","children":[]},{"level":3,"title":"为什么说 Java 编译与解释并存？","slug":"为什么说-java-编译与解释并存","link":"#为什么说-java-编译与解释并存","children":[]},{"level":3,"title":"AOT是什么？","slug":"aot是什么","link":"#aot是什么","children":[]},{"level":3,"title":"Java 和 C++ 的区别?","slug":"java-和-c-的区别","link":"#java-和-c-的区别","children":[]},{"level":3,"title":"java注释有哪些？","slug":"java注释有哪些","link":"#java注释有哪些","children":[]},{"level":3,"title":"标识符和关键字区别？","slug":"标识符和关键字区别","link":"#标识符和关键字区别","children":[]},{"level":3,"title":"移位运算符","slug":"移位运算符","link":"#移位运算符","children":[]},{"level":3,"title":"基础数据类型了解吗？","slug":"基础数据类型了解吗","link":"#基础数据类型了解吗","children":[]},{"level":3,"title":"基本类型和包装类型？","slug":"基本类型和包装类型","link":"#基本类型和包装类型","children":[]},{"level":3,"title":"***包装类型的缓存机制了解吗？","slug":"包装类型的缓存机制了解吗","link":"#包装类型的缓存机制了解吗","children":[]},{"level":3,"title":"***自动拆箱和装箱了解吗？","slug":"自动拆箱和装箱了解吗","link":"#自动拆箱和装箱了解吗","children":[]},{"level":3,"title":"如何解决浮点数精度丢失问题？","slug":"如何解决浮点数精度丢失问题","link":"#如何解决浮点数精度丢失问题","children":[]},{"level":3,"title":"重载和重写区别？","slug":"重载和重写区别","link":"#重载和重写区别","children":[]},{"level":3,"title":"可变长参数？","slug":"可变长参数","link":"#可变长参数","children":[]},{"level":3,"title":"***面向对象和面向过程区别？","slug":"面向对象和面向过程区别","link":"#面向对象和面向过程区别","children":[]},{"level":3,"title":"一个类没有声明构造方法，能创建对象?","slug":"一个类没有声明构造方法-能创建对象","link":"#一个类没有声明构造方法-能创建对象","children":[]},{"level":3,"title":"构造方法有哪些特点？是否可被 override?","slug":"构造方法有哪些特点-是否可被-override","link":"#构造方法有哪些特点-是否可被-override","children":[]},{"level":3,"title":"***面向对象三大特征？","slug":"面向对象三大特征","link":"#面向对象三大特征","children":[]},{"level":3,"title":"接口和抽象类有何异同？","slug":"接口和抽象类有何异同","link":"#接口和抽象类有何异同","children":[]},{"level":3,"title":"深拷贝和浅拷贝区别？懂引用拷贝？","slug":"深拷贝和浅拷贝区别-懂引用拷贝","link":"#深拷贝和浅拷贝区别-懂引用拷贝","children":[]},{"level":3,"title":"***Object常见方法？","slug":"object常见方法","link":"#object常见方法","children":[]},{"level":3,"title":"***hashCode()了解多少？","slug":"hashcode-了解多少","link":"#hashcode-了解多少","children":[]},{"level":3,"title":"***为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"为什么重写-equals-时必须重写-hashcode-方法","link":"#为什么重写-equals-时必须重写-hashcode-方法","children":[]},{"level":3,"title":"String&StringBuild&StringBuffer？","slug":"string-stringbuild-stringbuffer","link":"#string-stringbuild-stringbuffer","children":[]},{"level":3,"title":"***String为啥不可变？","slug":"string为啥不可变","link":"#string为啥不可变","children":[]},{"level":3,"title":"Java 9 为何要将 String 的底层实现由 char[] 改成了 byte[] ?","slug":"java-9-为何要将-string-的底层实现由-char-改成了-byte","link":"#java-9-为何要将-string-的底层实现由-char-改成了-byte","children":[]},{"level":3,"title":"字符串拼接+还是StrignBuild？","slug":"字符串拼接-还是strignbuild","link":"#字符串拼接-还是strignbuild","children":[]},{"level":3,"title":"***字符串常量池作用？","slug":"字符串常量池作用","link":"#字符串常量池作用","children":[]},{"level":3,"title":"***String#intern 方法有什么作用?","slug":"string-intern-方法有什么作用","link":"#string-intern-方法有什么作用","children":[]},{"level":3,"title":"Exception 和 Error 有什么区别？","slug":"exception-和-error-有什么区别","link":"#exception-和-error-有什么区别","children":[]},{"level":3,"title":"***Checked Exception 和 Unchecked Exception 有什么区别？","slug":"checked-exception-和-unchecked-exception-有什么区别","link":"#checked-exception-和-unchecked-exception-有什么区别","children":[]},{"level":3,"title":"Throwable 类常用方法有哪些？","slug":"throwable-类常用方法有哪些","link":"#throwable-类常用方法有哪些","children":[]},{"level":3,"title":"try-catch-finally 如何使用？","slug":"try-catch-finally-如何使用","link":"#try-catch-finally-如何使用","children":[]},{"level":3,"title":"***如何使用 try-with-resources 代替try-catch-finally？","slug":"如何使用-try-with-resources-代替try-catch-finally","link":"#如何使用-try-with-resources-代替try-catch-finally","children":[]},{"level":3,"title":"什么是泛型？","slug":"什么是泛型","link":"#什么是泛型","children":[]},{"level":3,"title":"***泛型有哪些？","slug":"泛型有哪些","link":"#泛型有哪些","children":[]},{"level":3,"title":"何谓反射？","slug":"何谓反射","link":"#何谓反射","children":[]},{"level":3,"title":"反射的优缺点？","slug":"反射的优缺点","link":"#反射的优缺点","children":[]},{"level":3,"title":"***反射的应用场景？","slug":"反射的应用场景","link":"#反射的应用场景","children":[]},{"level":3,"title":"何谓注解？","slug":"何谓注解","link":"#何谓注解","children":[]},{"level":3,"title":"注解的解析方法有哪几种？","slug":"注解的解析方法有哪几种","link":"#注解的解析方法有哪几种","children":[]},{"level":3,"title":"***了解SPI？","slug":"了解spi","link":"#了解spi","children":[]},{"level":3,"title":"什么是序列化?什么是反序列化?","slug":"什么是序列化-什么是反序列化","link":"#什么是序列化-什么是反序列化","children":[]},{"level":3,"title":"***如果有些字段不想进行序列化怎么办？","slug":"如果有些字段不想进行序列化怎么办","link":"#如果有些字段不想进行序列化怎么办","children":[]},{"level":3,"title":"常见序列化协议有哪些？","slug":"常见序列化协议有哪些","link":"#常见序列化协议有哪些","children":[]},{"level":3,"title":"Java IO 流了解吗？","slug":"java-io-流了解吗","link":"#java-io-流了解吗","children":[]},{"level":3,"title":"I/O 流为什么要分为字节流和字符流呢?","slug":"i-o-流为什么要分为字节流和字符流呢","link":"#i-o-流为什么要分为字节流和字符流呢","children":[]},{"level":3,"title":"什么是语法糖？","slug":"什么是语法糖","link":"#什么是语法糖","children":[]}],"git":{"updatedTime":1732677926000,"contributors":[{"name":"liushun-ing","email":"1743760069@qq.com","commits":1}]},"filePathRelative":"master/bagu/javabase.md"}');export{l as data};
