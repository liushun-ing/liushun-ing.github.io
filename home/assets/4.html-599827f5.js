const e=JSON.parse('{"key":"v-dd8a19a6","path":"/master/redis/4.html","title":"Redis原理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1、Redis数据结构","slug":"_1、redis数据结构","link":"#_1、redis数据结构","children":[{"level":3,"title":"1.1 Redis数据结构-动态字符串","slug":"_1-1-redis数据结构-动态字符串","link":"#_1-1-redis数据结构-动态字符串","children":[]},{"level":3,"title":"1.2 Redis数据结构-intset","slug":"_1-2-redis数据结构-intset","link":"#_1-2-redis数据结构-intset","children":[]},{"level":3,"title":"1.3 Redis数据结构-Dict","slug":"_1-3-redis数据结构-dict","link":"#_1-3-redis数据结构-dict","children":[]},{"level":3,"title":"1.4 Redis数据结构-ZipList","slug":"_1-4-redis数据结构-ziplist","link":"#_1-4-redis数据结构-ziplist","children":[]},{"level":3,"title":"1.5 Redis数据结构-ZipList的连锁更新问题","slug":"_1-5-redis数据结构-ziplist的连锁更新问题","link":"#_1-5-redis数据结构-ziplist的连锁更新问题","children":[]},{"level":3,"title":"1.6 Redis数据结构-QuickList","slug":"_1-6-redis数据结构-quicklist","link":"#_1-6-redis数据结构-quicklist","children":[]},{"level":3,"title":"1.7 Redis数据结构-SkipList","slug":"_1-7-redis数据结构-skiplist","link":"#_1-7-redis数据结构-skiplist","children":[]},{"level":3,"title":"1.8 Redis数据结构-RedisObject","slug":"_1-8-redis数据结构-redisobject","link":"#_1-8-redis数据结构-redisobject","children":[]},{"level":3,"title":"1.9 Redis数据结构-String","slug":"_1-9-redis数据结构-string","link":"#_1-9-redis数据结构-string","children":[]},{"level":3,"title":"2.0 Redis数据结构-List","slug":"_2-0-redis数据结构-list","link":"#_2-0-redis数据结构-list","children":[]},{"level":3,"title":"2.1 Redis数据结构-Set结构","slug":"_2-1-redis数据结构-set结构","link":"#_2-1-redis数据结构-set结构","children":[]},{"level":3,"title":"2.2 Redis数据结构-ZSET","slug":"_2-2-redis数据结构-zset","link":"#_2-2-redis数据结构-zset","children":[]},{"level":3,"title":"2.3 Redis数据结构-Hash","slug":"_2-3-redis数据结构-hash","link":"#_2-3-redis数据结构-hash","children":[]}]},{"level":2,"title":"2、Redis网络模型","slug":"_2、redis网络模型","link":"#_2、redis网络模型","children":[{"level":3,"title":"2.1 用户空间和内核态空间","slug":"_2-1-用户空间和内核态空间","link":"#_2-1-用户空间和内核态空间","children":[]},{"level":3,"title":"2.2.网络模型-阻塞IO","slug":"_2-2-网络模型-阻塞io","link":"#_2-2-网络模型-阻塞io","children":[]},{"level":3,"title":"2.3 网络模型-非阻塞IO","slug":"_2-3-网络模型-非阻塞io","link":"#_2-3-网络模型-非阻塞io","children":[]},{"level":3,"title":"2.4 网络模型-IO多路复用","slug":"_2-4-网络模型-io多路复用","link":"#_2-4-网络模型-io多路复用","children":[]},{"level":3,"title":"2.5 网络模型-IO多路复用-select方式","slug":"_2-5-网络模型-io多路复用-select方式","link":"#_2-5-网络模型-io多路复用-select方式","children":[]},{"level":3,"title":"2.6 网络模型-IO多路复用模型-poll模式","slug":"_2-6-网络模型-io多路复用模型-poll模式","link":"#_2-6-网络模型-io多路复用模型-poll模式","children":[]},{"level":3,"title":"2.7 网络模型-IO多路复用模型-epoll函数","slug":"_2-7-网络模型-io多路复用模型-epoll函数","link":"#_2-7-网络模型-io多路复用模型-epoll函数","children":[]},{"level":3,"title":"2.8、网络模型-epoll中的ET和LT","slug":"_2-8、网络模型-epoll中的et和lt","link":"#_2-8、网络模型-epoll中的et和lt","children":[]},{"level":3,"title":"2.9 网络模型-基于epoll的服务器端流程","slug":"_2-9-网络模型-基于epoll的服务器端流程","link":"#_2-9-网络模型-基于epoll的服务器端流程","children":[]},{"level":3,"title":"3.0 、网络模型-信号驱动","slug":"_3-0-、网络模型-信号驱动","link":"#_3-0-、网络模型-信号驱动","children":[]},{"level":3,"title":"3.1 、网络模型-Redis是单线程的吗？为什么使用单线程","slug":"_3-1-、网络模型-redis是单线程的吗-为什么使用单线程","link":"#_3-1-、网络模型-redis是单线程的吗-为什么使用单线程","children":[]},{"level":3,"title":"3.2 、Redis的单线程模型-Redis单线程和多线程网络模型变更","slug":"_3-2-、redis的单线程模型-redis单线程和多线程网络模型变更","link":"#_3-2-、redis的单线程模型-redis单线程和多线程网络模型变更","children":[]}]},{"level":2,"title":"3、Redis通信协议-RESP协议","slug":"_3、redis通信协议-resp协议","link":"#_3、redis通信协议-resp协议","children":[]},{"level":2,"title":"4、Redis内存回收","slug":"_4、redis内存回收","link":"#_4、redis内存回收","children":[{"level":3,"title":"4.1. 过期key处理","slug":"_4-1-过期key处理","link":"#_4-1-过期key处理","children":[]},{"level":3,"title":"4.2. 内存淘汰策略","slug":"_4-2-内存淘汰策略","link":"#_4-2-内存淘汰策略","children":[]}]}],"git":{"updatedTime":1709537083000,"contributors":[{"name":"liushun","email":"1743760069@qq.com","commits":1}]},"filePathRelative":"master/redis/4.md"}');export{e as data};
