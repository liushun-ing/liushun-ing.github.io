import{_ as s,o as a,c as n,a as e}from"./app-d0fb739e.js";const i="/home/assets/image-20220509171754790-a58facea.png",l="/home/assets/image-20220509171925824-f87f7889.png",r="/home/assets/image-20220509172047183-622ad657.png",t="/home/assets/image-20220509172229402-cf47400d.png",c="/home/assets/image-20220509172313627-f3fc38cb.png",d="/home/assets/image-20220509172821742-f1cfd28e.png",p={},o=e(`<h1 id="centos7安装nginx" tabindex="-1"><a class="header-anchor" href="#centos7安装nginx" aria-hidden="true">#</a> Centos7安装nginx</h1><h3 id="_1-下载" tabindex="-1"><a class="header-anchor" href="#_1-下载" aria-hidden="true">#</a> 1 下载</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://nginx.org/download/nginx-1.20.2.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-安装依赖" tabindex="-1"><a class="header-anchor" href="#_2-安装依赖" aria-hidden="true">#</a> 2 安装依赖</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc pcre-devel zlib-devel openssl openssl-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-安装" tabindex="-1"><a class="header-anchor" href="#_3-安装" aria-hidden="true">#</a> 3 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.20.2.tar.gz

<span class="token comment">#进入nginx目录</span>
<span class="token builtin class-name">cd</span> ./nginx-1.20.2

<span class="token comment">#配置 输出目录</span>
./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx

<span class="token comment">#编译</span>
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_4-配置环境变量" aria-hidden="true">#</a> 4 配置环境变量</h3><p>进入配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在最后加入如下配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/nginx/sbin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新加载配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以使用如下指令来查看所有环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-一些命令" tabindex="-1"><a class="header-anchor" href="#_5-一些命令" aria-hidden="true">#</a> 5 一些命令</h3><p>启动：<code>nginx</code> 或者 <code>nginx -s start</code></p><p>以特定目录下的配置文件启动：<code>nginx -c /特定目录/nginx.conf</code></p><p>重新加载配置：<code>nginx -s reload</code> 执行这个命令后，master进程会等待worker进程处理完当前请求，然后根据最新配置重新创建新的worker进程，完成Nginx配置的热更新。</p><p>立即停止服务：<code>nginx -s stop</code></p><p>从容停止服务：<code>nginx -s quit</code> 执行该命令后，Nginx在完成当前工作任务后再停止。</p><p>检查配置文件是否正确：<code>nginx -t</code></p><p>检查特定目录的配置文件是否正确：<code>nginx -t -c /特定目录/nginx.conf</code></p><p>查看版本信息：<code>nginx -v</code></p><h3 id="_6-配置systemd方式管理nginx" tabindex="-1"><a class="header-anchor" href="#_6-配置systemd方式管理nginx" aria-hidden="true">#</a> 6 配置systemd方式管理nginx</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/systemd/system/nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>做如下配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>The Nginx HTTP Server
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target remote-fs.target nss-lookup.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/usr/local/nginx/logs/nginx.pid
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx
<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> stop
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置后的命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start nginx.service　<span class="token comment">#（启动nginx服务）</span>
systemctl stop nginx.service　<span class="token comment">#（停止nginx服务）</span>
systemctl <span class="token builtin class-name">enable</span> nginx.service <span class="token comment">#（设置开机自启动）</span>
systemctl disable nginx.service <span class="token comment">#（停止开机自启动）</span>
systemctl status nginx.service <span class="token comment">#（查看服务当前状态）</span>
systemctl restart nginx.service　<span class="token comment">#（重新启动服务）</span>
systemctl list-units <span class="token parameter variable">--type</span><span class="token operator">=</span>service <span class="token comment">#（查看所有已启动的服务）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-设置防火墙" tabindex="-1"><a class="header-anchor" href="#_7-设置防火墙" aria-hidden="true">#</a> 7 设置防火墙</h3><p>注意如果是云服务器，还需要再云服务平台也开放防火墙端口</p><p>让 CentOS 系统对外网公开 80 端口和允许外部访问 http 服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-service<span class="token operator">=</span>http <span class="token parameter variable">--permanent</span>
// 重启
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果Web 站点启用 HTTPS 协议，那么还需要让防火强对外公开 443 端口和 https 服务。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">443</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-service<span class="token operator">=</span>https <span class="token parameter variable">--permanent</span>
// 重启
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-卸载nginx" tabindex="-1"><a class="header-anchor" href="#_8-卸载nginx" aria-hidden="true">#</a> 8 卸载nginx</h3><p>先查看nginx是否在运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+i+`" alt="image-20220509171754790" style="zoom:80%;"><p>如果在运行，就使用<code>nginx -s stop</code> 或者 <code>systemctl stop nginx.service</code>停止服务</p><p>查看nginx相关文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">whereis</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+l+`" alt="image-20220509171925824" style="zoom:80%;"><p>find查找相关文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> / <span class="token parameter variable">-name</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+r+`" alt="image-20220509172047183" style="zoom:80%;"><p>注意只要红框是docker配置的nginx，不删</p><p>删除相关文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /usr/local/nginx /usr/local/nginx/sbin/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+t+`" alt="image-20220509172229402" style="zoom:80%;"><p>使用yum在清理一次</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum remove nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+c+`" alt="image-20220509172313627" style="zoom:80%;"><p>关闭一下开启自启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl disable nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="`+d+'" alt="image-20220509172821742" style="zoom:80%;"><p>完成</p>',59),m=[o];function v(u,b){return a(),n("div",null,m)}const h=s(p,[["render",v],["__file","nginx_tutorial.html.vue"]]);export{h as default};
