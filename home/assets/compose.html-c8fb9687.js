import{_ as s,r as n,o as d,c as r,b as e,e as t,d as o,a}from"./app-6d09a449.js";const i={},p=e("h1",{id:"docker-compose",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-compose","aria-hidden":"true"},"#"),o(" Docker Compose")],-1),l=e("p",null,[e("code",null,"Docker Compose"),o(" 是 Docker 官方编排（Orchestration）项目之一，负责快速的部署分布式应用。")],-1),m=e("h2",{id:"介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),o(" 介绍")],-1),h={href:"https://github.com/docker/compose",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"Compose",-1),u=e("code",null,"OpenStack",-1),k=e("code",null,"Heat",-1),f=e("s",null,"没听过",-1),v=a(`<p><code>Compose</code> 定位是 「定义和运行多个 Docker 容器的应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。</p><p>使用一个 <code>Dockerfile</code> 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。</p><p><code>Compose</code> 恰好满足了这样的需求。它允许用户通过一个单独的 <code>docker-compose.yml</code> 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。</p><p><code>Compose</code> 中有两个重要的概念：</p><ul><li>服务 (<code>service</code>)：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。</li><li>项目 (<code>project</code>)：由一组关联的应用容器组成的一个完整业务单元，在 <code>docker-compose.yml</code> 文件中定义。</li></ul><p><code>Compose</code> 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。</p><p><code>Compose</code> 项目由 Python 编写，实现上调用了 Docker 服务提供的 API 来对容器进行管理。因此，只要所操作的平台支持 Docker API，就可以在其上利用 <code>Compose</code> 来进行编排管理。</p><p><code>Compose</code> 支持 Linux、macOS、Windows 三大平台。</p><p><code>Docker Desktop for Mac/Windows</code> 自带 <code>compose</code>，安装 Docker 之后可以直接使用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>liushun@liushun ~ % <span class="token function">docker</span> compose version
Docker Compose version v2.28.1-desktop.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><s>然后就是玩抽象，没用过，不看了</s></p>`,11);function D(b,C){const c=n("ExternalLinkIcon");return d(),r("div",null,[p,l,m,e("p",null,[e("a",h,[_,t(c)]),o(" 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。从功能上看，跟 "),u,o(" 中的 "),k,o(" 十分类似。"),f]),v])}const g=s(i,[["render",D],["__file","compose.html.vue"]]);export{g as default};
