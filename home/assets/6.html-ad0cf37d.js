import{_ as a,o as n,c as s,a as t}from"./app-69b48761.js";const p={},e=t(`<h1 id="react路由" tabindex="-1"><a class="header-anchor" href="#react路由" aria-hidden="true">#</a> React路由</h1><h2 id="相关理解" tabindex="-1"><a class="header-anchor" href="#相关理解" aria-hidden="true">#</a> 相关理解</h2><h3 id="spa的理解" tabindex="-1"><a class="header-anchor" href="#spa的理解" aria-hidden="true">#</a> SPA的理解</h3><ul><li>单页Web应用（single page web application，SPA）。</li><li>整个应用只有<strong>一个完整的页面</strong>。</li><li>点击页面中的链接<strong>不会刷新</strong>页面，只会做页面的<strong>局部更新。</strong></li><li>数据都需要通过ajax请求获取, 并在前端异步展现。</li></ul><h3 id="路由的理解" tabindex="-1"><a class="header-anchor" href="#路由的理解" aria-hidden="true">#</a> 路由的理解</h3><p><strong>什么是路由?</strong></p><ul><li>一个路由就是一个映射关系(key:value)</li><li>key为路径, value可能是function或component</li></ul><p><strong>路由分类</strong></p><ul><li>后端路由： <ul><li>理解： value是function, 用来处理客户端提交的请求。</li><li>注册路由： <code>router.get(path, function(req, res))</code></li><li>工作过程：当node接收到一个请求时, 根据请求路径找到匹配的路由, 调用路由中的函数来处理请求, 返回响应数据</li></ul></li><li>前端路由： <ul><li>浏览器端路由，value是component，用于展示页面内容。</li><li>注册路由: <code>&lt;Route path=&quot;/test&quot; component={Test}&gt;</code></li><li>工作过程：当浏览器的path变为/test时, 当前路由组件就会变为Test组件</li></ul></li></ul><h3 id="react-router-dom的理解" tabindex="-1"><a class="header-anchor" href="#react-router-dom的理解" aria-hidden="true">#</a> react-router-dom的理解</h3><ul><li>react的一个插件库。</li><li>专门用来实现一个SPA应用。</li><li>基于react的项目基本都会用到此库。</li></ul><h2 id="react-router-dom相关api" tabindex="-1"><a class="header-anchor" href="#react-router-dom相关api" aria-hidden="true">#</a> react-router-dom相关API</h2><p>官网：https://reactrouter.com/</p><p>旧版中文教程：https://react-router.docschina.org/</p><h3 id="路由的基本使用" tabindex="-1"><a class="header-anchor" href="#路由的基本使用" aria-hidden="true">#</a> 路由的基本使用</h3><p>引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js: </span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Link<span class="token punctuation">,</span> Route<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>
<span class="token comment">// index.js: </span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>BrowserRouter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.明确好界面中的导航区、展示区</p><p>2.导航区的a标签改为Link标签</p><p><code>&lt;Link to=&quot;/xxxxx&quot;&gt;Demo&lt;/Link&gt;</code></p><p>3.展示区写Route标签进行路径的匹配</p><p><code>&lt;Route path=&#39;/xxxx&#39; component={Demo}/&gt;</code></p><p>4.<code>&lt;App/&gt;</code>的最外侧包裹了一个<code>&lt;BrowserRouter&gt;</code>或<code>&lt;HashRouter&gt;</code></p><h3 id="路由的严格匹配与模糊匹配" tabindex="-1"><a class="header-anchor" href="#路由的严格匹配与模糊匹配" aria-hidden="true">#</a> 路由的严格匹配与模糊匹配</h3><p>1.默认使用的是模糊匹配（简单记:【输入的路径】必须包含要【匹配的路径】，且顺序要一致</p><p>2.开启严格匹配:<code>&lt;Route exact={true} path=&quot;/about&quot; component={About}/&gt;</code></p><p>3.严格匹配不要随便开启，需要再开，有些时候开启会导致无法继续匹配二级路由</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">exact</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/one<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>About<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">path</th><th style="text-align:center;">location.pathname</th><th style="text-align:center;">exact</th><th style="text-align:center;">matches?</th></tr></thead><tbody><tr><td style="text-align:center;"><code>/one</code></td><td style="text-align:center;"><code>/one/two</code></td><td style="text-align:center;"><code>true</code></td><td style="text-align:center;">no</td></tr><tr><td style="text-align:center;"><code>/one</code></td><td style="text-align:center;"><code>/one/two</code></td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">yes</td></tr></tbody></table><h3 id="navlink" tabindex="-1"><a class="header-anchor" href="#navlink" aria-hidden="true">#</a> NavLink</h3><p>1.<code>NavLink</code>可以实现路由链接的高亮，通过<code>activeclassName</code>指定样式名,默认的给定类是 <code>active</code>。它将与 <code>className</code> 属性一起使用。</p><p>2.标签体内容是一个特殊的标签属性</p><p>3.通过<code>this.props.children</code>可以获取标签体内容</p><p>4.<code>activeStyle</code>当元素处于 <code>active</code> 时应用于元素的样式。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NavLink</span></span>
  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/faq<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">activeStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
    <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
   <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="token punctuation">&gt;</span></span><span class="token plain-text">FAQs</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">NavLink</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NavLink</span></span>
  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/faq<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">activeClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selected<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token plain-text">FAQs</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">NavLink</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="switch的使用" tabindex="-1"><a class="header-anchor" href="#switch的使用" aria-hidden="true">#</a> Switch的使用</h3><p>1.通常情况下，path和component是一一对应的关系。</p><p>2.Switch可以提高路由匹配效率(单一匹配)。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">exact</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>About<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/user<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>User<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">// 这样只会匹配第一个home,不会渲染第二个了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌套路由" tabindex="-1"><a class="header-anchor" href="#嵌套路由" aria-hidden="true">#</a> 嵌套路由</h3><p>1.注册子路由时要写上父路由的path值</p><p>2.路由的匹配是按照注册路由的顺序进行的&gt;&gt;&gt;也就是先匹配父组件的注册路由，找到了，就挂载子组件，然后再从子组件的注册路由中继续匹配，否则，直接在父组件中就直接重定向了，或者直接找不到</p><p>父组件路由</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyNavLink</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token plain-text">About</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyNavLink</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyNavLink</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home <span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token plain-text">Home</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyNavLink</span></span><span class="token punctuation">&gt;</span></span>

<span class="token punctuation">{</span><span class="token comment">/*注册路由*/</span><span class="token punctuation">}</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>About<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">exact</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Redirect</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>子组件路由</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyNavLink</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home/news<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">News</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyNavLink</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyNavLink</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home/message<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Message</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">MyNavLink</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home/news<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>News<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home/message<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Message<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Redirect</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home/news<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="路由组件参数传递" tabindex="-1"><a class="header-anchor" href="#路由组件参数传递" aria-hidden="true">#</a> 路由组件参数传递</h3><h4 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一" aria-hidden="true">#</a> 方式一</h4><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// params参数</span>
<span class="token comment">//路由链接(携带参数):</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/demo/test/tom/18<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">详情</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">//注册路由(声明接收):</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/demo/test/:name/:age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Test<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">//接收参数: </span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span>title<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>match<span class="token punctuation">.</span>params
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二" aria-hidden="true">#</a> 方式二</h4><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// search参数</span>
<span class="token comment">//路由链接(携带参数): </span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/demo/test?name=tom&amp;age=18<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">详情</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">//注册路由(无需声明，正常注册即可):</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/demo/test<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Test<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">//接收参数: this.props.location.search</span>
<span class="token comment">//备注:获取到的search是urlencoded编码字符串，需要借助querystring解析Ⅰ</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>search<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式三" tabindex="-1"><a class="header-anchor" href="#方式三" aria-hidden="true">#</a> 方式三</h4><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// state参数</span>
<span class="token comment">//路由链接(携带参数):</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token literal-property property">pathname</span><span class="token operator">:</span><span class="token string">&#39;/demo/test&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">详情</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">//注册路由(无需声明，正常注册即可): </span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/demo/test<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Test<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">//接收参数: </span>
<span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>location<span class="token punctuation">.</span>state
<span class="token comment">//各注:刷新也可以保留住参数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="withrouter" tabindex="-1"><a class="header-anchor" href="#withrouter" aria-hidden="true">#</a> withRouter</h3><p>这样就可以在header组件中使用<code>this.props.history.go(1)</code>，等API</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span><span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>withRouter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">Header</span> <span class="token keyword">extends</span> <span class="token class-name">component</span> <span class="token punctuation">{</span> …
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>Header<span class="token punctuation">)</span>
<span class="token comment">//withRouter可以加工一般组件，让一般组件具备路由组件所特有的API</span>
<span class="token comment">//withRouter的返回值是一个新组件</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多级路径刷新页面样式丢失的问题" tabindex="-1"><a class="header-anchor" href="#多级路径刷新页面样式丢失的问题" aria-hidden="true">#</a> 多级路径刷新页面样式丢失的问题</h2><p>1.<code>public/index.htm1</code> 中引入样式时不写<code>./</code> 写<code>/</code>（常用)</p><p>2.<code>public/index.html</code> 中引入样式时不写<code>./</code>写<code>%PUBLIC_URL%</code>（常用)</p><p>3.使用<code>HashRouter</code></p><h2 id="组件分类" tabindex="-1"><a class="header-anchor" href="#组件分类" aria-hidden="true">#</a> 组件分类</h2><h3 id="路由组件" tabindex="-1"><a class="header-anchor" href="#路由组件" aria-hidden="true">#</a> 路由组件</h3><p>通过路由引入</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/xxxx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Demo<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一般放在<code>pages</code>文件夹里面</p><p><code>props</code>参数：（由路由器传递的三个固定属性）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">history</span><span class="token operator">:</span>
    <span class="token literal-property property">go</span><span class="token operator">:</span> f <span class="token function">go</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    <span class="token literal-property property">goBack</span><span class="token operator">:</span> f <span class="token function">goBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token literal-property property">goForward</span><span class="token operator">:</span> f <span class="token function">goForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token literal-property property">push</span><span class="token operator">:</span> f <span class="token function">push</span><span class="token punctuation">(</span>path，state<span class="token punctuation">)</span>
    <span class="token literal-property property">replace</span><span class="token operator">:</span> f <span class="token function">replace</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
<span class="token literal-property property">location</span><span class="token operator">:</span>
    <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&quot;/about&quot;</span>
	<span class="token literal-property property">search</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
<span class="token literal-property property">match</span><span class="token operator">:</span>
	<span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>i<span class="token punctuation">}</span>
	<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/about&quot;</span>
	<span class="token literal-property property">ur1</span><span class="token operator">:</span> <span class="token string">&quot;/about&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一般组件" tabindex="-1"><a class="header-anchor" href="#一般组件" aria-hidden="true">#</a> 一般组件</h3><p>通过标签自己引入</p><p>一般放在<code>components</code>文件夹</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>props参数由父组件传递</p><h2 id="browserrouter和hashrouter的区别" tabindex="-1"><a class="header-anchor" href="#browserrouter和hashrouter的区别" aria-hidden="true">#</a> BrowserRouter和HashRouter的区别</h2><p>1.底层原理不一样:</p><ul><li>BrowserRouter使用的是H5的history API，不兼容IE9及以下版本。</li><li>HashRouter使用的是URL的哈希值。</li></ul><p>2.ur1长现形式不一样</p><ul><li>BrowserRouter的路径中没有#,例如: localhost: 3000/demo/test</li><li>HashRouter的路径包含#,例如: localhost :3000/#/demo/test</li></ul><p>3.刷新后对路由state参数的影响</p><ul><li>(1).BrowserRouter没有任何影响，因为state保存在history对象中。</li><li>(2).HashRouter刷新后会导致路由state参数的丢失。</li></ul><p>4.备注: HashRouter可以用于解决一些路径错误相关的问题。</p><ul><li>如相对路径引入失败</li></ul>`,81),o=[e];function c(l,i){return n(),s("div",null,o)}const r=a(p,[["render",c],["__file","6.html.vue"]]);export{r as default};
