import{_ as i,r as d,o,c as l,b as e,d as a,e as c,a as s}from"./app-69b48761.js";const r={},t=s(`<h1 id="system-usage" tabindex="-1"><a class="header-anchor" href="#system-usage" aria-hidden="true">#</a> System Usage</h1><h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h2><p>一些ubuntu系统的基本操作</p><blockquote><p>修改密码</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后输入旧密码，和新密码即可</p><blockquote><p>查看当前所处目录</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>

/data0/shunliu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>创建目录</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> xxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>包括隐藏文件和详细信息：</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bashCopy code
ls -a -l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这将显示包括隐藏文件在内的所有文件，并提供详细信息，如文件权限、所有者、大小等。</p><blockquote><p>删除目录或文件</p></blockquote><p>删除安装python的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> ~/python3.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>不小心删了环境变量</p></blockquote><p>可以手动修改配置文件后，关闭当前终端窗口，然后重新打开一个新的终端窗口。每次打开新终端时，它都会加载配置文件，包括 <code>.bashrc</code>。</p><h2 id="编辑文件" tabindex="-1"><a class="header-anchor" href="#编辑文件" aria-hidden="true">#</a> 编辑文件</h2><p><strong>Vim:</strong></p><p>Vim是一个强大的文本编辑器。要使用Vim：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在Vim中，按 <code>i</code> 进入插入模式，进行编辑。完成编辑后，按 <code>Esc</code> 键，然后输入 <code>:wq</code> 并按 <code>Enter</code> 保存更改并退出。</p><h2 id="传文件" tabindex="-1"><a class="header-anchor" href="#传文件" aria-hidden="true">#</a> 传文件</h2><p>要将本地文件夹传输到Ubuntu服务器，可以使用一些常见的工具和协议，例如 <code>scp</code>（Secure Copy Protocol）。下面是基本方法：（这个针对大的文件夹以及一些不合法的命名可能会失败）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> <span class="token parameter variable">-P</span> <span class="token number">22</span> /path/to/local/folder username@remote_server_ip:/path/on/remote/server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-r</code>: 递归地复制整个文件夹。</li><li><code>-P</code>：指定端口号，默认为22。</li><li><code>/path/to/local/folder</code>: 本地文件夹的路径。</li><li><code>username</code>: 远程服务器上的用户名。</li><li><code>remote_server_ip</code>: 远程服务器的IP地址。</li><li><code>/path/on/remote/server</code>: 远程服务器上存储文件夹的路径。</li></ul><h2 id="安装python" tabindex="-1"><a class="header-anchor" href="#安装python" aria-hidden="true">#</a> 安装python</h2><p>没有sudo权限，可以在没有特权的用户下安装Python。</p><ol><li><p><strong>选择或创建安装目录：</strong></p><p>首先，选择一个你有写入权限的目录，或者在你的主目录下创建一个新目录来安装Python。例如，你可以在主目录下创建一个名为<code>python3.9</code>的目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/python3.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>下载Python 3.9.2源代码：</strong></p><p>在终端中执行以下命令，从Python官方网站下载源代码：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://www.python.org/ftp/python/3.9.2/Python-3.9.2.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>解压缩源代码文件：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xf</span> Python-3.9.2.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>进入解压缩后的目录：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> Python-3.9.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>配置安装路径和编译：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/data1/shunliu/Program/python3.9
<span class="token function">make</span> -j<span class="token variable"><span class="token variable">$(</span>nproc<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这将在你的主目录下创建一个名为<code>python3.9</code>的目录，并在其中安装Python。</p></li><li><p><strong>安装Python 3.9.2：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将安装Python到你指定的目录。</p></li><li><p><strong>添加Python可执行文件路径到PATH：</strong></p><p>你可能需要将Python的可执行文件路径添加到你的PATH中，这样系统才能找到它。在你的shell配置文件（例如<code>~/.bashrc</code>或<code>~/.zshrc</code>）中添加以下行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/data1/shunliu/Program/pyt:<span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后运行 <code>source ~/.bashrc</code> 或 <code>source ~/.zshrc</code> 来使更改生效。</p></li><li><p><strong>验证安装：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3.9 <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将显示安装的Python 3.9.2版本号。</p></li></ol><h2 id="安装pip" tabindex="-1"><a class="header-anchor" href="#安装pip" aria-hidden="true">#</a> 安装pip</h2><p>如果你想在非root用户下安装<code>pip</code>，并且同时指定安装路径，你可以使用 <code>--target</code> 选项。这个选项允许你指定包的安装目录。</p><p>以下是步骤：</p><ol><li><p><strong>下载 <code>get-pip.py</code> 脚本:</strong></p><p>在终端中执行以下命令，下载 <code>get-pip.py</code> 脚本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://bootstrap.pypa.io/get-pip.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你没有安装 <code>wget</code>，你可以使用 <code>curl</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-O</span> https://bootstrap.pypa.io/get-pip.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>指定安装路径运行脚本:</strong></p><p>使用 <code>python</code> 命令运行 <code>get-pip.py</code> 脚本，并指定安装路径。确保使用的是你要安装 <code>pip</code> 的 Python 版本，例如，如果你想安装给 Python 3 使用，使用 <code>python3</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3.9 get-pip.py <span class="token parameter variable">--target</span><span class="token operator">=</span>/data1/shunliu/Program/my_pip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将在 <code>$HOME/my_pip_installation</code> 目录中安装 <code>pip</code>。</p></li><li><p><strong>将用户本地 <code>bin</code> 目录添加到 <code>$PATH</code>：</strong></p><p>为了能够在任何地方运行 <code>pip</code>，确保用户本地的 <code>bin</code> 目录在 <code>$PATH</code> 中。在 <code>~/.bashrc</code> 或 <code>~/.zshrc</code> 文件中添加以下行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/data1/shunliu/Program/my_pip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>source</code> 命令或重新启动终端以使更改生效。</p></li><li><p><strong>验证安装:</strong></p><p>运行以下命令验证 <code>pip</code> 是否已成功安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果一切正常，你应该能够看到 <code>pip</code> 的版本信息。</p></li><li><p><strong>切换为清华源</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
pip config list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="安装anaconda" tabindex="-1"><a class="header-anchor" href="#安装anaconda" aria-hidden="true">#</a> 安装Anaconda</h2><p>使用上面的方法安装了python和pip之后，安装一些库的时候会报<code>_ctype</code>找不到的错误，网上的解决方式是使用apt-get安装libffi-dev库，但是没有root权限，在实验室服务器上始终没找到办法解决。最后使用anaconda进行环境的自动管理。</p><p>使用 <code>wget</code> 命令下载并安装 Anaconda。以下是在终端中执行的步骤：</p>`,37),p=e("strong",null,"在终端中下载Anaconda脚本:",-1),u=e("code",null,"wget",-1),h=e("code",null,"<版本号>",-1),v={href:"https://www.anaconda.com/products/distribution",target:"_blank",rel:"noopener noreferrer"},b=s(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://repo.anaconda.com/archive/Anaconda3-<span class="token operator">&lt;</span>版本号<span class="token operator">&gt;</span>-Linux-x86_64.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),g=s(`<li><p><strong>运行安装脚本:</strong> 下载完成后，运行下载的脚本来安装Anaconda。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> Anaconda3-<span class="token operator">&lt;</span>版本号<span class="token operator">&gt;</span>-Linux-x86_64.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在这里，同样需要替换 <code>&lt;版本号&gt;</code> 为下载的Anaconda版本的实际版本号。</p></li><li><p><strong>按照安装程序的提示进行操作:</strong> 安装程序将提示您接受许可协议、选择安装位置等。最好使用它的<strong>默认安装位置</strong>，不知道为什么，我切换安装目录他会安装失败。</p></li><li><p><strong>初始化Anaconda:</strong> 安装完成后，可能需要重新启动终端，或者运行以下命令来初始化Anaconda：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>测试Anaconda:</strong> 运行以下命令来测试Anaconda是否正确安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这应该显示Anaconda的版本号，表明安装成功。</p></li>`,4);function m(k,x){const n=d("ExternalLinkIcon");return o(),l("div",null,[t,e("ol",null,[e("li",null,[e("p",null,[p,a(" 打开终端并使用 "),u,a(" 下载Anaconda脚本。请注意，您需要替换 "),h,a(" 为您要下载的Anaconda版本的实际版本号。访问 "),e("a",v,[a("Anaconda官方网站"),c(n)]),a(" 获取最新版本的下载链接。")]),b]),g])])}const f=i(r,[["render",m],["__file","system_usage.html.vue"]]);export{f as default};
